# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  schedule:
    - cron: 0 20 * * *
  release:
    types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h

      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config

          #
          # ========================固件定制部分========================
          # 
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_GNUTLS_ALPN=y
          CONFIG_GNUTLS_ANON=y
          CONFIG_GNUTLS_DTLS_SRTP=y
          CONFIG_GNUTLS_HEARTBEAT=y
          CONFIG_GNUTLS_OCSP=y
          CONFIG_GNUTLS_PSK=y
          CONFIG_KSMBD_SMB_INSECURE_SERVER=y
          CONFIG_LIBCURL_COOKIES=y
          CONFIG_LIBCURL_FILE=y
          CONFIG_LIBCURL_FTP=y
          CONFIG_LIBCURL_HTTP=y
          CONFIG_LIBCURL_MBEDTLS=y
          CONFIG_LIBCURL_NO_SMB="!"
          CONFIG_LIBCURL_PROXY=y
          CONFIG_OPENVPN_openssl_ENABLE_DEF_AUTH=y
          CONFIG_OPENVPN_openssl_ENABLE_FRAGMENT=y
          CONFIG_OPENVPN_openssl_ENABLE_LZ4=y
          CONFIG_OPENVPN_openssl_ENABLE_LZO=y
          CONFIG_OPENVPN_openssl_ENABLE_MULTIHOME=y
          CONFIG_OPENVPN_openssl_ENABLE_PF=y
          CONFIG_OPENVPN_openssl_ENABLE_PORT_SHARE=y
          CONFIG_OPENVPN_openssl_ENABLE_SERVER=y
          CONFIG_OPENVPN_openssl_ENABLE_SMALL=y
          CONFIG_PACKAGE_alsa-lib=y
          CONFIG_PACKAGE_alsa-utils=y
          CONFIG_PACKAGE_avahi-dbus-daemon=y
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_ca-bundle=y
          CONFIG_PACKAGE_confuse=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_dbus=y
          CONFIG_PACKAGE_dnsforwarder=y
          CONFIG_PACKAGE_fdk-aac=y
          CONFIG_PACKAGE_forked-daapd=y
          CONFIG_PACKAGE_frpc=y
          CONFIG_PACKAGE_frps=y
          CONFIG_PACKAGE_haproxy=y
          CONFIG_PACKAGE_iptables-mod-extra=y
          CONFIG_PACKAGE_iputils-arping=y
          CONFIG_PACKAGE_kcptun-client=y
          CONFIG_PACKAGE_kmod-ac97=y
          CONFIG_PACKAGE_kmod-crypto-ccm=y
          CONFIG_PACKAGE_kmod-crypto-cmac=y
          CONFIG_PACKAGE_kmod-crypto-ctr=y
          CONFIG_PACKAGE_kmod-crypto-gcm=y
          CONFIG_PACKAGE_kmod-crypto-gf128=y
          CONFIG_PACKAGE_kmod-crypto-ghash=y
          CONFIG_PACKAGE_kmod-crypto-md4=y
          CONFIG_PACKAGE_kmod-crypto-rng=y
          CONFIG_PACKAGE_kmod-crypto-seqiv=y
          CONFIG_PACKAGE_kmod-crypto-sha256=y
          CONFIG_PACKAGE_kmod-crypto-sha512=y
          CONFIG_PACKAGE_kmod-fs-cifs=y
          CONFIG_PACKAGE_kmod-fs-ksmbd=y
          CONFIG_PACKAGE_kmod-ipt-extra=y
          CONFIG_PACKAGE_kmod-ipt-offload=y
          CONFIG_PACKAGE_kmod-nf-flow=y
          CONFIG_PACKAGE_kmod-regmap-core=y
          CONFIG_PACKAGE_kmod-sound-core=y
          CONFIG_PACKAGE_kmod-sound-hda-codec-hdmi=y
          CONFIG_PACKAGE_kmod-sound-hda-codec-realtek=y
          CONFIG_PACKAGE_kmod-sound-hda-codec-via=y
          CONFIG_PACKAGE_kmod-sound-hda-core=y
          CONFIG_PACKAGE_kmod-sound-hda-intel=y
          CONFIG_PACKAGE_kmod-sound-i8x0=y
          CONFIG_PACKAGE_kmod-sound-mpu401=y
          CONFIG_PACKAGE_kmod-sound-via82xx=y
          CONFIG_PACKAGE_kmod-usb-audio=y
          CONFIG_PACKAGE_ksmbd-server=y
          CONFIG_PACKAGE_lame-lib=y
          CONFIG_PACKAGE_libantlr3c=y
          CONFIG_PACKAGE_libavahi-client=y
          CONFIG_PACKAGE_libavahi-dbus-support=y
          CONFIG_PACKAGE_libbz2=y
          CONFIG_PACKAGE_libcap=y
          CONFIG_PACKAGE_libcap-bin=y
          CONFIG_PACKAGE_libcap-bin-capsh-shell="/bin/sh"
          CONFIG_PACKAGE_libconfig=y
          CONFIG_PACKAGE_libcurl=y
          CONFIG_PACKAGE_libdaemon=y
          CONFIG_PACKAGE_libdbus=y
          CONFIG_PACKAGE_libedit=y
          CONFIG_PACKAGE_libexpat=y
          CONFIG_PACKAGE_libffmpeg-full=y
          CONFIG_PACKAGE_libgcrypt=y
          CONFIG_PACKAGE_libgdbm=y
          CONFIG_PACKAGE_libgnutls=y
          CONFIG_PACKAGE_libgpg-error=y
          CONFIG_PACKAGE_libiconv-full=y
          CONFIG_PACKAGE_libltdl=y
          CONFIG_PACKAGE_liblua5.3=y
          CONFIG_PACKAGE_liblzo=y
          CONFIG_PACKAGE_libnettle=y
          CONFIG_PACKAGE_libnl-core=y
          CONFIG_PACKAGE_libnl-genl=y
          CONFIG_PACKAGE_libnss=y
          CONFIG_PACKAGE_libopus=y
          CONFIG_PACKAGE_libplist=y
          CONFIG_PACKAGE_libpopt=y
          CONFIG_PACKAGE_libprotobuf-c=y
          CONFIG_PACKAGE_libsoxr=y
          CONFIG_PACKAGE_libsqlite3=y
          CONFIG_PACKAGE_libunistring=y
          CONFIG_PACKAGE_libwebsockets-full=y
          CONFIG_PACKAGE_libxml2=y
          CONFIG_PACKAGE_luci-app-adguardhome=y
          CONFIG_PACKAGE_luci-app-airplay2=y
          CONFIG_PACKAGE_luci-app-cifs-mount=y
          CONFIG_PACKAGE_luci-app-cifsd=y
          CONFIG_PACKAGE_luci-app-dnsforwarder=y
          CONFIG_PACKAGE_luci-app-flowoffload=y
          CONFIG_PACKAGE_luci-app-frpc=y
          CONFIG_PACKAGE_luci-app-frps=y
          CONFIG_PACKAGE_luci-app-haproxy-tcp=y
          CONFIG_PACKAGE_luci-app-music-remote-center=y
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-openvpn=y
          CONFIG_PACKAGE_luci-app-openvpn-server=y
          CONFIG_PACKAGE_luci-app-serverchan=y
          CONFIG_PACKAGE_luci-app-softethervpn=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_NaiveProxy=y
          CONFIG_PACKAGE_luci-app-v2ray-server=y
          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
          CONFIG_PACKAGE_luci-i18n-airplay2-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-cifs-mount-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-cifsd-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-dnsforwarder-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-flowoffload-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-frpc-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-frps-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-haproxy-tcp-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-music-remote-center-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-openvpn-server-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-openvpn-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-softethervpn-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-v2ray-server-zh-cn=y
          CONFIG_PACKAGE_luci-theme-darkmatter=y
          CONFIG_PACKAGE_mxml=y
          CONFIG_PACKAGE_naiveproxy=y
          CONFIG_PACKAGE_nspr=y
          CONFIG_PACKAGE_openvpn-easy-rsa=y
          CONFIG_PACKAGE_openvpn-openssl=y
          CONFIG_PACKAGE_shairport-sync-openssl=y
          CONFIG_PACKAGE_softethervpn5-bridge=y
          CONFIG_PACKAGE_softethervpn5-client=y
          CONFIG_PACKAGE_softethervpn5-libs=y
          CONFIG_PACKAGE_softethervpn5-server=y
          CONFIG_PACKAGE_sqlite3-cli=y
          CONFIG_SQLITE3_DYNAMIC_EXTENSIONS=y
          CONFIG_SQLITE3_FTS3=y
          CONFIG_SQLITE3_FTS4=y
          CONFIG_SQLITE3_FTS5=y
          CONFIG_SQLITE3_JSON1=y
          CONFIG_SQLITE3_LIBEDIT=y
          CONFIG_SQLITE3_RTREE=y
          EOF
          # 
          # ========================固件定制部分结束========================
          # 

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig


      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
  

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
